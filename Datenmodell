import java.io.Serializable;

public class Person implements Serializable {
    private final String firstName;
    private final String lastName;
    private final String phone;

    public Person(String firstName, String lastName, String phone) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.phone = phone;
    }

    public String getLastName() {
        return lastName;
    }

    public String getFirstName() {
        return firstName;
    }

    public String getPhone() {
        return phone;
    }
}
-------------------------------------------------------------------------------
import java.util.Iterator;
public interface AddressBookDataModel {
void addPerson(Person p);
Iterator<Person> iterator();
}
-------------------------------------------------------------------------------
import java.io.Serializable;
import java.util.*;
public class ArrayListAddressBookDataModel implements
AddressBookDataModel, Serializable {
private ArrayList<Person> persons;
public ArrayListAddressBookDataModel() {
persons = new ArrayList<Person>();
}
@Override
public void addPerson(Person p) {
persons.add(p);
}
@Override
public Iterator<Person> iterator() {
return persons.iterator();
}
}
-------------------------------------------------------------------------------
public class AddressBookException extends Exception {
public AddressBookException(String message) {
super(message);
}
public AddressBookException(Throwable cause) {
super(cause);
}
}
-------------------------------------------------------------------------------
public interface FullPersistence {
AddressBookDataModel loadBook() throws AddressBookException;
void storeBook(AddressBookDataModel book) throws AddressBookException;
}
-------------------------------------------------------------------------------
import java.io.*;
public class SerializationToFilePersistence implements FullPersistence {
private String addressBookPath;
public SerializationToFilePersistence(String addressBookPath) {
this.addressBookPath = addressBookPath;
}
@Override
public AddressBookDataModel loadBook() throws AddressBookException {
ObjectInputStream ois = null;
try {
ois = new ObjectInputStream(new FileInputStream(addressBookPath));
return (AddressBookDataModel) ois.readObject();
} catch (IOException e) {
throw new AddressBookException(e);
} catch (ClassNotFoundException e) {
throw new AddressBookException(e);
} finally {
try {
if (ois != null) {
ois.close();
}
} catch (IOException e) {
e.printStackTrace();
}
}
}
@Override
public void storeBook(AddressBookDataModel book) throws AddressBookException {
ObjectOutputStream oos = null;
try {
oos = new ObjectOutputStream(new FileOutputStream(addressBookPath));
oos.writeObject(book);
} catch (IOException e) {
throw new AddressBookException(e);
} finally {
if (oos != null) {
try {
oos.close();
} catch (IOException e) {
e.printStackTrace();
}
}
}
}
}
